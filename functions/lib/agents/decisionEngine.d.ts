import { Firestore } from '@google-cloud/firestore';
import { MessageRouter } from '../core/messageRouter';
import { Logger } from '../utils/logger';
export declare class DecisionEngine {
    private db;
    private messageRouter;
    private logger;
    private openai;
    private continuousMonitoringInterval;
    private scannerAllocationCache;
    constructor(db: Firestore, messageRouter: MessageRouter, logger: Logger);
    private initialize;
    private setupMessageHandlers;
    private handleUserCommunication;
    private makeInformedDecision;
    private executeDecision;
    private sendRoadmapUpdate;
    private updateScannerAllocation;
    private determineScanMode;
    private getCurrentSystemState;
    private getActiveUsers;
    private getTaskMetrics;
    private getCriticalIssues;
    private startContinuousMonitoring;
    private performContinuousAnalysis;
    private handleMultipleBlockages;
    private suggestResourceReallocation;
    private generateReallocationStrategy;
    private escalateCriticalIssues;
    private notifyAffectedUsers;
    private initiateCollaboration;
    private sendNotification;
    private allocateResources;
    private updateComponent;
    private notifyAgent;
    private updateMonitoringContext;
    private handleProgressUpdate;
    private handleScannerAllocation;
    private calculateOptimalScanners;
    private suggestAssistance;
    cleanup(): void;
}
